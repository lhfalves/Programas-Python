# Sistema bancário com Python
# Objetivo de realizar depositos, saques e extrato
# Permitir apenas 3 saques de R$ 500.00
# Listar extrato com todas as operaçoes realizadas e apresentar saldo ao final



from datetime import date, time, datetime

def menu():

    print(" \n")

    print("[d] Depositar ")
    print("[s] Sacar" )
    print("[e] Extrato")
    print("[q] Sair")
    #print("\n")
    
    return

saldo = 0
limite = 500
extrato, sld ="", ""
numero_saques = 0
LIMITE_SAQUES = 3
data_atual = datetime.now()
print(data_atual.strftime('%d/%m/%y %H:%M:%S'))
dt = str(data_atual.strftime('%d/%m/%y %H:%M:%S') )


def teste_erro() :
    try:
        valor = float(input('Digite o valor: '))
    except ValueError:
        print("Valor informado inválido ")
        valor = 0
    else:
        if valor<0:
            print ("Informar um valor positivo")
            valor=0
    finally:
        return valor


def testa_limite_saque():

    # Verifica se a data atual (dt) é a mesma do extrato.
    #Caso negativo permite retorno do limite de saque para 3

    data_atual = datetime.now()
    dt = str(data_atual.strftime('%d/%m/%y') )
    #localiza a última ocorrência da barra da data
    localizastring = extrato.rfind('/')
    # manipula a string e fatia a parte da data
    fatia = extrato[localizastring-5 : localizastring+3]
    #Caso a a data atual seja diferente da última data do extrato volta o LIMITE de Saque para 3
    if dt != fatia :
        LIMITE_SAQUES = 3

    return LIMITE_SAQUES



while True:

    menu()

    opcao = input("Selecione uma opção: ")

    if opcao == "d" :
        print(" Opção Depósito ", 50 * "/")
        print("Qual valor deseja depositar ? ")

        valor_depositado =  teste_erro()

        if valor_depositado > 0 :
            saldo = saldo + valor_depositado
            sld = str(saldo)

            #atualiza a data do depósito
            data_atual = datetime.now()
            dt = str(data_atual.strftime('%d/%m/%y %H:%M:%S'))

            extrato = extrato + str(dt) + f" R${valor_depositado:,.2f}" + " Depósito" + "\n"



    elif opcao == "s" :

        #testa o limite de saques
        if LIMITE_SAQUES > 0 :

            if saldo >0 :
                print(" Opção Saque ", 50 * "/")
                print(" Qual valor deseja sacar ? ")
                valor_saque = teste_erro()

                if valor_saque> 0 and valor_saque<501 :

                    # teste_saldo verifica se o saldo ficara menor do que zero
                    teste_saldo = saldo - valor_saque
                    if teste_saldo >= 0 :
                        LIMITE_SAQUES = LIMITE_SAQUES - 1
                        saldo = saldo - valor_saque
                        sld = str(saldo)

                        #atualiza data do saque
                        data_atual = datetime.now()
                        dt = str(data_atual.strftime('%d/%m/%y %H:%M:%S'))

                        extrato = extrato + str(dt) + f" R${valor_saque:,.2f}" + " Saque" + "\n"

                    else:
                        print (" Saldo insuficiente para realizar este saque! Operação não realizada")
                else:
                    print(" Escolha um valor positivo e menor do que R$ 500,00")

            else:
                print(" Sua conta não possui saldo. Deposite algum valor na conta!")


        else :
            print ("Você excedeu o limite de saques nesta data. Operação não realizada ")



    elif opcao == "e" :
        print("  Extrato ", 50 * "/")

        # evita erro caso o usuáro escolha extrato sem saldo
        if len(sld)>0 :
            print( extrato )
            testa_limite_saque()

        print ( f"Saldo em conta: R${saldo:,.2f}")
        print(50 * "/")


    elif opcao == "q" :
        print(" Sair ")
        break

    else:
        print(" Opção inválida! Por favor, selecione a opção do Menu.")

